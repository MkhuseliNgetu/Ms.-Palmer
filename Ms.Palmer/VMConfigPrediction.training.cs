﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML.Transforms;
using Microsoft.ML;

namespace Ms_Palmer
{
    public partial class VMConfigPrediction
    {
        /// <summary>
        /// Retrains model using the pipeline generated as part of the training process. For more information on how to load data, see aka.ms/loaddata.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <param name="trainData"></param>
        /// <returns></returns>
        public static ITransformer RetrainPipeline(MLContext mlContext, IDataView trainData)
        {
            var pipeline = BuildPipeline(mlContext);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(new []{new InputOutputColumnPair(@"UseCase", @"UseCase"),new InputOutputColumnPair(@"OperatingSystem", @"OperatingSystem"),new InputOutputColumnPair(@"OperatingSystemLicense", @"OperatingSystemLicense"),new InputOutputColumnPair(@"GuestAdditions", @"GuestAdditions")}, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"UseCase",@"OperatingSystem",@"OperatingSystemLicense",@"GuestAdditions"}))      
                                    .Append(mlContext.Regression.Trainers.LightGbm(new LightGbmRegressionTrainer.Options(){NumberOfLeaves=24338,NumberOfIterations=255,MinimumExampleCountPerLeaf=20,LearningRate=5.34584061924115E-07,LabelColumnName=@"Size",FeatureColumnName=@"Features",ExampleWeightColumnName=null,Booster=new GradientBooster.Options(){SubsampleFraction=0.000315294665491463,FeatureFraction=0.99999999,L1Regularization=0.000427269904945936,L2Regularization=0.0915789175415866},MaximumBinCountPerFeature=705}));

            return pipeline;
        }
    }
}
